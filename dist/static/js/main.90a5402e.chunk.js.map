{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectSkeleton.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebase_config.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","profile","className","to","onClick","initials","SignedOut","Navbar","state","sidebarShow","handleToggle","setState","this","link","uid","SignedInLinks","SignedOutLinks","Component","firebase","Notifications","notifications","notifvView","map","item","key","id","user","content","moment","time","toDate","fromNow","color","highlightColor","ProjectSummary","project","title","authorFirstName","createdAt","format","ProjectSkeleton","ProjectList","projects","Dashboard","notifLoading","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","match","params","list_projects","data","detail","startOf","SignIn","email","password","handleChage","e","authError","disableAuthError","target","value","handleSubmit","preventDefault","signIn","swal","fire","text","icon","onSubmit","htmlFor","onChange","disabled","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","fristname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","firstName","firstname","lastName","CreateProject","handleChange","_","includes","createProject","allowOutsideClick","history","push","authId","add","authorLastName","authorId","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","src","alt","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90a5402e.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\n/* eslint-disable */\nconst SignedIn = props => {\n  const { profile } = props;\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Logout</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { signOut: () => dispatch(signOut()) };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedIn);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => dispatch({ type: \"LOGIN_SUCCESS\" }))\n      .catch(error => dispatch({ type: \"LOGIN_ERROR\", error }));\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => dispatch({ type: \"LOGOUT_SUCCESS\" }));\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(response => {\n        firestore\n          .collection(\"users\")\n          .doc(response.user.uid)\n          .set({\n            firstName: newUser.firstname,\n            lastName: newUser.lastname,\n            initials: newUser.firstname[0] + newUser.lastname[0]\n          });\n      })\n      .then(() => dispatch({ type: \"SIGNUP_SUCCESS\" }))\n      .catch(error => dispatch({ type: \"SIGNUP_ERROR\", error }));\n  };\n};\n\nexport const disableAuthError = () => dispatch =>\n  dispatch({ type: \"DISABLE_AUTH_ERROR\" });\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOut = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOut;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\nimport { Component } from \"react\";\n\nclass Navbar extends Component {\n  state = {\n    sidebarShow: false\n  };\n\n  handleToggle = () => {\n    this.setState({ sidebarShow: !this.state.sidebarShow });\n  };\n\n  render() {\n    const { auth, profile } = this.props;\n    const link = auth.uid ? (\n      <SignedInLinks profile={profile} />\n    ) : (\n      <SignedOutLinks />\n    );\n\n    return (\n      <div>\n        <nav className=\"nav-extended\">\n          <nav className=\"nav-wrapper indigo darken-2\">\n            <div className=\"container\">\n              <Link to=\"/\" className=\"brand-logo\">\n                React Project\n              </Link>\n              <span className=\"sidenav-trigger\" onClick={this.handleToggle}>\n                <i className=\"material-icons\">menu</i>\n              </span>\n              <ul className=\"right hide-on-med-and-down\">{link}</ul>\n            </div>\n          </nav>\n        </nav>\n        {this.state.sidebarShow ? (\n          <div className=\"side-wrapper\" onClick={this.handleToggle}>\n            <ul className=\"side-nav\">{link}</ul>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { auth: state.firebase.auth, profile: state.firebase.profile };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\n\nconst Notifications = ({ notifications }) => {\n  const notifvView = notifications ? (\n    notifications.map(item => {\n      return (\n        <li key={item.id}>\n          <span className=\"indigo-text text-lighten-3\">{item.user} </span>\n          <span className=\"white-text\">{item.content}</span>\n          <div className=\"grey-text note-date\">\n            {moment(item.time.toDate()).fromNow()}\n          </div>\n        </li>\n      );\n    })\n  ) : (\n    <li>\n      <SkeletonTheme color=\"#2c3e50\" highlightColor=\"#ecf0f1\">\n        <span>\n          <Skeleton />\n        </span>\n        <span>\n          <Skeleton />\n        </span>\n        <div>\n          <Skeleton />\n        </div>\n      </SkeletonTheme>\n    </li>\n  );\n  return (\n    <div className=\"section\">\n      <div className=\"z-depth-0\">\n        <div className=\"card-content\">\n          <div className=\"card-title white-text\">Notifications</div>\n          <ul className=\"notifications\">{notifvView}</ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card card-border\">\n      <div className=\"card-content \">\n        <span className=\"card-title indigo-text\">\n          <i className=\"material-icons\">ac_unit</i>\n          {project.title}\n        </span>\n      </div>\n      <div className=\"card-action\">\n        <span className=\"grey-text\">Author: {project.authorFirstName}</span>\n        <p className=\"grey-text text-darken-3\">\n          {moment(project.createdAt.toDate()).format(\"DD MMM YYYY\")}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst ProjectSkeleton = () => {\n  return (\n    <div className=\"card card-border\">\n      <div className=\"card-content\">\n        <div className=\"card-title indigo-text\">\n          <Skeleton />\n        </div>\n        <div className=\"card-action\">\n          <span className=\"grey-text\">\n            <Skeleton />\n          </span>\n          <p className=\"grey-text text-darken-3\">\n            <Skeleton />\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSkeleton;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\nimport ProjectSkeleton from \"./ProjectSkeleton\";\n\nconst ProjectList = ({ projects }) => {\n  if (projects) {\n    return (\n      <div className=\"section\">\n        {projects.map(project => {\n          return (\n            <Link to={`/project/${project.id}`} key={project.id}>\n              <ProjectSummary project={project}></ProjectSummary>\n            </Link>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"section\">\n        <ProjectSkeleton />\n        <ProjectSkeleton />\n        <ProjectSkeleton />\n      </div>\n    );\n  }\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, notifications, auth } = this.props;\n    const notifLoading = auth.uid ? (\n      <Notifications notifications={notifications}></Notifications>\n    ) : (\n      <div className=\"section\">\n        <div className=\"card card-border\">\n          <div className=\"card-content\">\n            <span className=\"indigo-text\">Login first</span>\n            <br />\n            <span>to see notifications</span>\n          </div>\n        </div>\n      </div>\n    );\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6 project-list\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m6\">{notifLoading}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    notifications: state.firestore.ordered.notifications,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", limit: 5, orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 4, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst ProjectDetails = props => {\n  const { detail, auth } = props;\n\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  if (detail) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title indigo-text\">\n              <i className=\"material-icons\">ac_unit</i> {detail.title}\n            </span>\n            <p>{detail.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4\">\n            <div className=\"indigo-text\">{detail.authorFirstName}</div>\n            <div className=\"grey-text text-darken-4\">\n              {moment(detail.createdAt.toDate())\n                .startOf(\"hour\")\n                .fromNow()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title indigo-text\">\n              <Skeleton />\n            </span>\n            <p>\n              <Skeleton />\n            </p>\n          </div>\n          <div className=\"card-action grey lighten-4\">\n            <div className=\"indigo-text\">\n              <Skeleton />\n            </div>\n            <div className=\"grey-text text-darken-4\">\n              <Skeleton />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, props) => {\n  const id = props.match.params.id;\n  const list_projects = state.firestore.data.projects;\n  const project_details = list_projects ? list_projects[id] : null;\n  return {\n    detail: project_details,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, disableAuthError } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert2\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChage = e => {\n    if (this.props.authError) this.props.disableAuthError();\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { auth } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    const { authError } = this.props;\n\n    if (authError) {\n      swal.fire({\n        title: authError,\n        text: \"wrong password/username\",\n        icon: \"error\"\n      });\n    }\n\n    return (\n      <div className=\"container\">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"card auth-form card-border\"\n        >\n          <div className=\"card-content\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChage} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChage}\n              />\n            </div>\n            <div className=\"input-field\">\n              <button\n                className=\"btn indigo lighten-1 z-depth-0\"\n                disabled={authError}\n              >\n                Login\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds)),\n    disableAuthError: () => dispatch(disableAuthError())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp, disableAuthError } from \"../../store/actions/authActions\";\nimport swal from \"sweetalert2\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    fristname: \"\",\n    lastname: \"\"\n  };\n  handleChage = e => {\n    if (this.props.authError) this.props.disableAuthError();\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth } = this.props;\n    const { authError } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    if (authError) {\n      swal.fire({\n        title: \"signup failed\",\n        text: authError,\n        icon: \"error\"\n      });\n    }\n\n    return (\n      <div className=\"container \">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"card card-border auth-form\"\n        >\n          <div className=\"card-content\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChage} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChage}\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"firstname\">First Name</label>\n              <input type=\"text\" id=\"firstname\" onChange={this.handleChage} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"lastname\">Last Name</label>\n              <input type=\"text\" id=\"lastname\" onChange={this.handleChage} />\n            </div>\n            <div className=\"input-field\">\n              <button\n                className=\"btn indigo lighten-1 z-depth-0\"\n                disabled={authError}\n              >\n                Register\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapsStateToProps = state => {\n  return { auth: state.firebase.auth, authError: state.auth.authError };\n};\n\nconst mapsDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser)),\n    disableAuthError: () => dispatch(disableAuthError())\n  };\n};\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\nimport swal from \"sweetalert2\";\nimport _ from \"lodash\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\"\n  };\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    if (_.includes(this.state, \"\")) {\n      return swal.fire({\n        title: \"can't create project\",\n        text: \"you must complete form before submit data\",\n        icon: \"error\"\n      });\n    }\n\n    this.props.createProject(this.state);\n    return swal\n      .fire({\n        title: \"success\",\n        text: \"added new project\",\n        icon: \"success\",\n        allowOutsideClick: false\n      })\n      .then(response => {\n        if (response.value) this.props.history.push(\"/\");\n      });\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\n\n    return (\n      <div className=\"container \">\n        <form onSubmit={this.handleSubmit} className=\"card card-border\">\n          <div className=\"card-content\">\n            <h5 className=\"grey-text text-darken-3\">Create Project </h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"content\">Content</label>\n              <textarea\n                id=\"content\"\n                className=\"materialize-textarea\"\n                onChange={this.handleChange}\n              ></textarea>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn indigo lighten-1 z-depth-0\">Submit</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createProject: project => dispatch(createProject(project))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch(error => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", error });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n            <Route path=\"/signin\" component={SignIn}></Route>\n            <Route path=\"/signup\" component={SignUp}></Route>\n            <Route path=\"/create\" component={CreateProject}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = { authError: null };\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"Login Error\");\n      return { ...state, authError: \"login failed\" };\n\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login Success\");\n      return { ...state, authError: null };\n\n    case \"LOGOUT_SUCCESS\":\n      console.log(\"signout success \");\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success \");\n      return { ...state, authError: null };\n\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error \");\n      console.log(action.error);\n      return { ...state, authError: action.error.message };\n\n    case \"DISABLE_AUTH_ERROR\":\n      return { ...state, authError: null };\n\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: 1, title: \"Lorem ipsum dolor amet 1\", content: \"blah blah\" },\n    { id: 2, title: \"Lorem ipsum dolor amet 2\", content: \"blah blah\" },\n    { id: 3, title: \"Lorem ipsum dolor ametm 3\", content: \"blah blah\" }\n  ]\n};\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"create project\", action.project);\n      return state;\n\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error\", action.error);\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MS_ID\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\nfirebase.analytics();\nfirebase.database();\n\nexport default firebase;\n","/* eslint no-use-before-define: 0 */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded\n} from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebase_config\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig)\n  )\n);\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <div className=\"splash-screen\">\n        <img src=\"logo192.png\" alt=\"splash screen\" />\n      </div>\n    );\n  return children;\n}\n\nconst rrfProps = {\n  firebase: firebaseConfig,\n  config: { userProfile: \"users\", useFirestoreForProfile: true },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}