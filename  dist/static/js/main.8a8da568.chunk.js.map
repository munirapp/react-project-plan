{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebase_config.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","profile","className","to","onClick","initials","SignedOut","state","firebase","link","uid","SignedInLinks","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","createdAt","format","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","match","params","list_projects","data","detail","startOf","SignIn","email","password","handleChage","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","fristname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","firstName","firstname","lastName","CreateProject","createProject","history","push","authId","add","authorLastName","authorId","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","database","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a8da568.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\n/* eslint-disable */\nconst SignedIn = props => {\n  const { profile } = props;\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Logout</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { signOut: () => dispatch(signOut()) };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedIn);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => dispatch({ type: \"LOGIN_SUCCESS\" }))\n      .catch(error => dispatch({ type: \"LOGIN_ERROR\", error }));\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => dispatch({ type: \"LOGOUT_SUCCESS\" }));\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(response => {\n        firestore\n          .collection(\"users\")\n          .doc(response.user.uid)\n          .set({\n            firstName: newUser.firstname,\n            lastName: newUser.lastname,\n            initials: newUser.firstname[0] + newUser.lastname[0]\n          });\n      })\n      .then(() => dispatch({ type: \"SIGNUP_SUCCESS\" }))\n      .catch(error => dispatch({ type: \"SIGNUP_ERROR\", error }));\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOut = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOut;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth } = props;\n  const { profile } = props;\n  const link = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          React Project\n        </Link>\n        {link}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { auth: state.firebase.auth, profile: state.firebase.profile };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = ({ notifications }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"z-depth-0\">\n        <div className=\"card-content\">\n          <div className=\"card-title\">Notifications</div>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>{project.authorFirstName}</p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).format(\"DD MMM YYYY\")}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={`/project/${project.id}`} key={project.id}>\n              <ProjectSummary project={project}></ProjectSummary>\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, notifications } = this.props;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6 \">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  const { detail, auth } = props;\n\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  if (detail) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{detail.title}</span>\n            <p>{detail.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>{detail.authorFirstName}</div>\n            <div>\n              {moment(detail.createdAt.toDate())\n                .startOf(\"hour\")\n                .fromNow()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <div className=\"container center\">Loading...</div>;\n  }\n};\n\nconst mapStateToProps = (state, props) => {\n  const id = props.match.params.id;\n  const list_projects = state.firestore.data.projects;\n  const project_details = list_projects ? list_projects[id] : null;\n  return {\n    detail: project_details,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChage = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { auth } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    const { authError } = this.props;\n    return (\n      <div className=\"container \">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChage} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChage} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { signIn: creds => dispatch(signIn(creds)) };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    fristname: \"\",\n    lastname: \"\"\n  };\n  handleChage = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n  render() {\n    const { auth } = this.props;\n    const { authError } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\" />;\n\n    return (\n      <div className=\"container \">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChage} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChage} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstname\">First Name</label>\n            <input type=\"text\" id=\"firstname\" onChange={this.handleChage} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastname\">Last Name</label>\n            <input type=\"text\" id=\"lastname\" onChange={this.handleChage} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapsStateToProps = state => {\n  return { auth: state.firebase.auth, authError: state.auth.authError };\n};\n\nconst mapsDispatchToProps = dispatch => {\n  return { signUp: newUser => dispatch(signUp(newUser)) };\n};\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \" \"\n  };\n  handleChage = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\"></Redirect>;\n\n    return (\n      <div className=\"container \">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project </h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChage} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChage}\n            ></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createProject: project => dispatch(createProject(project))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authId,\n        createdAt: new Date()\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch(error => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", error });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard}></Route>\n            <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n            <Route path=\"/signin\" component={SignIn}></Route>\n            <Route path=\"/signup\" component={SignUp}></Route>\n            <Route path=\"/create\" component={CreateProject}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = { authError: null };\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"Login Error\");\n      return { ...state, authError: \"login failed\" };\n\n    case \"LOGIN_SUCCESS\":\n      console.log(\"Login Success\");\n      return { ...state, authError: null };\n\n    case \"LOGOUT_SUCCESS\":\n      console.log(\"signout success \");\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success \");\n      return { ...state, authError: null };\n\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error \");\n      console.log(action.error);\n      return { ...state, authError: action.error.message };\n\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: 1, title: \"Lorem ipsum dolor amet 1\", content: \"blah blah\" },\n    { id: 2, title: \"Lorem ipsum dolor amet 2\", content: \"blah blah\" },\n    { id: 3, title: \"Lorem ipsum dolor ametm 3\", content: \"blah blah\" }\n  ]\n};\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"create project\", action.project);\n      return state;\n\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"create project error\", action.error);\n      return state;\n\n    default:\n      return state;\n  }\n};\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from \"redux-firestore\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MS_ID\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\nfirebase.analytics();\nfirebase.database();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebase_config\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebaseConfig)\n  )\n);\n\nconst rrfProps = {\n  firebase: firebaseConfig,\n  config: { userProfile: \"users\", useFirestoreForProfile: true },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}